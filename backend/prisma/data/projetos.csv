id;nome;descricao;tipo;imagens;nivel;repositorio;destaque
1;React Ignite;Projeto desenvolvido como parte do bootcamp Ignite da Rocketseat. Trata-se de uma aplicação de feed de posts, construída com React e Vite, com foco em boas práticas de desenvolvimento front-end.;web;"[""https://github.com/IgorBarcelo/ReactIgnite/raw/master/public/1.png"",""https://github.com/IgorBarcelo/ReactIgnite/raw/master/public/2.png"",""https://github.com/IgorBarcelo/ReactIgnite/raw/master/public/3.png"",""https://github.com/IgorBarcelo/ReactIgnite/raw/master/public/4.png"",""https://github.com/IgorBarcelo/ReactIgnite/raw/master/public/5.png""]";2;https://github.com/IgorBarcelo/ReactIgnite;false
2;WebScraping;Este projeto consiste em uma aplicação de web scraping que utiliza o HtmlAgilityPack para extrair dados de páginas da web, armazenando esses dados em um banco de dados MySQL. As informações são organizadas em duas classes principais: Product e ProductSpec. O Dapper é utilizado para a comunicação com o banco de dados, facilitando a inserção, atualização e recuperação dos dados. A interface do usuário é construída em um aplicativo Windows Forms, com a exibição dos dados feita através de DataGridViews e botões de edição para manipulação dos registros.;Desktop;"[""https://github.com/IgorBarcelo/WebScraping/raw/master/public/1.png"",""https://github.com/IgorBarcelo/WebScraping/raw/master/public/2.png"",""https://github.com/IgorBarcelo/WebScraping/raw/master/public/3.png""]";3;https://github.com/IgorBarcelo/WebScraping;true
3;React Ecommerce;Este é um projeto de aplicativo web de e-commerce construído com React. Ele permite que os usuários naveguem pelos produtos disponíveis, adicionem itens ao carrinho de compras, removam itens do carrinho e finalizem a compra.;web;"[""https://github.com/IgorBarcelo/react-ecommerce/raw/master/public/1.png"",""https://github.com/IgorBarcelo/react-ecommerce/raw/master/public/2.png""]";3;https://github.com/IgorBarcelo/react-ecommerce;true
4;Sparta Python;Projeto em Python que realiza o download de dados de Portal Dados Abertos CVM, armazena-os em um banco de dados SQLite e fornece uma interface web para consulta utilizando Flask.;web;"[""https://github.com/IgorBarcelo/sparta-python/raw/master/public/1.png"",""https://github.com/IgorBarcelo/sparta-python/raw/master/public/2.png""]";2;https://github.com/IgorBarcelo/sparta-python;false
5;Controle Financeiro;Aplicação full-stack para gerenciamento de títulos financeiros, permitindo a criação, edição, exclusão e visualização de registros O frontend é desenvolvido em Nuxt 3, enquanto o backend é construído com ASP.NET Core e Entity Framework Core.;web;"[""https://github.com/IgorBarcelo/controle-financeiro/raw/master/public/1.png"",""https://github.com/IgorBarcelo/controle-financeiro/raw/master/public/2.png"",""https://github.com/IgorBarcelo/controle-financeiro/raw/master/public/3.png"",""https://github.com/IgorBarcelo/controle-financeiro/raw/master/public/4.png""]";3;https://github.com/IgorBarcelo/controle-financeiro;true
6;Controle de Funcionários;Este é um projeto em Java puro que realiza a gestão de uma lista de funcionários com diversas operações, como aumento de salário, ordenação, agrupamento por função, cálculo de aniversariantes, entre outras.;Desktop;"[""https://github.com/IgorBarcelo/controle-funcionarios/raw/master/public/1.png"",""https://github.com/IgorBarcelo/controle-funcionarios/raw/master/public/2.png""]";2;https://github.com/IgorBarcelo/controle-funcionarios;false
